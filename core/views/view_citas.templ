package views

import (
	"fmt"
	"strconv"
    
    "github.com/foxinuni/citas/core/models"
	"time"
)

templ ViewCreateForm(cita models.Cita) {
    @Layout("Manejo Citas") {
        <form id="citas-form" class="bg-secondary rounded p-5 w-1/2 max-w-2xl min-w-fit flex flex-col items-center" action={ ActionForCita(cita) } method={ MethodForCita(cita) }>
            <div class="bg-accent rounded flex flex-col p-3 w-full items-center align-center font-medium">
                <p>A continuación se muestra el formulario para la creación de una cita.</p>
                <p>Por favor, llene los campos con la información solicitada:</p>
            </div>
            <div class="w-full my-4 flex flex-row items-center align-center">
                <label for="nombre">Nombres:</label>
                <input class="bg-back flex-1 px-3 py-1 ml-4 rounded" type="text" name="nombre" id="nombre" value={ cita.Persona.Nombre } placeholder="María Elena" required>
            </div>
            <div class="w-full my-4 flex flex-row items-center align-center">
                <label for="apellido">Apellidos:</label>
                <input class="bg-back flex-1 px-3 py-1 ml-4 rounded"  type="text" name="apellido" id="apellido" value={ cita.Persona.Apellido } placeholder="González Pérez" required>
            </div>
            <div class="w-full my-4 flex flex-row items-center align-center">
                <label for="cedula">Documento:</label>
                <input class="bg-back flex-1 px-3 py-1 ml-4 rounded appearance-none" type="number" name="cedula" id="cedula" inputmode="numeric" pattern="[0-9]+" value={ cita.Persona.Cedula } placeholder="1234567890" required>
                <label class="ml-4" for="edad">Edad:</label>
                <input class="bg-back w-20 px-3 py-1 ml-4 rounded appearance-none" type="number" name="edad" id="edad" inputmode="numeric" pattern="[0-9]+" value={ strconv.Itoa(cita.Persona.Edad) } placeholder="22" required>
            </div>
            <div class="w-full my-4 flex flex-row items-center align-center">
                <label for="fecha">Fecha:</label>
                <input class="bg-back flex-1 px-3 py-1 ml-4 rounded appearance-none" type="datetime-local" name="fecha" id="fecha" value={ DateForCita(cita) } required>
                <button class="bg-primary-light flex-1 px-3 py-1 ml-4 rounded font-medium" onclick="window.location.href='/citas'" type="button">Volver</button>
                <button class="bg-primary flex-1 px-3 py-1 ml-4 rounded font-medium" type="submit">Guardar</button>
            </div>
        </form>

        <script src="/static/js/citas-form.js"></script>
    }
}

func ActionForCita(cita models.Cita) templ.SafeURL {
    if cita.ID == "" {
        return templ.URL("/citas")
    }

    return templ.URL(fmt.Sprintf("/citas/%s", cita.ID))
}

func MethodForCita(cita models.Cita) string {
    if cita.ID == "" {
        return "post"
    }

    return "put"
}

func DateForCita(cita models.Cita) string {
    if cita.Fecha.IsZero() {
        return time.Now().Format("2006-01-02T15:04")
    }

    return cita.Fecha.Format("2006-01-02T15:04")
}

templ ComponentCitaTable(citas []models.Cita) {
    <table class="min-w-full divide-y divide-accent rounded-lg">
        <thead class="bg-accent">
            <tr>
                <th data-priority="2" class="py-2 px-6 text-left">Nombres</th>
                <th data-priority="3" class="py-2 px-6 text-left">Apellidos</th>
                <th data-priority="4" class="py-2 px-6 text-left">Cedula</th>
                <th data-priority="5" class="py-2 px-6 text-left">Edad</th>
                <th data-priority="1" class="py-2 px-6 text-left">Hora</th>
            </tr>
        </thead>
        <tbody class="bg-secondary divide-y divide-accent">
            if len(citas) == 0 {
                <tr>
                    <td colspan="5" class="py-6 w-full text-center">No hay citas registradas</td>
                </tr>
            } else {
                for _, cita := range citas {
                    <tr id={ cita.ID }>
                        <td class="py-2 px-6 text-left">{ cita.Persona.Nombre }</td>
                        <td class="py-2 px-6 text-left">{ cita.Persona.Apellido }</td>
                        <td class="py-2 px-6 text-left">{ cita.Persona.Cedula }</td>
                        <td class="py-2 px-6 text-left">{ strconv.Itoa(cita.Persona.Edad) }</td>
                        <td class="py-2 px-6 text-left">{ cita.Fecha.Format("03:04 PM") }</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

templ ViewCitaList(citas []models.Cita, date time.Time) {
    @Layout("Listado de Citas") {
        <div class="p-1 w-1/2 max-w-2xl min-w-fit flex flex-col items-center">
            <form action="/citas" method="get" class="min-w-full rounded-lg bg-secondary flex items-center px-4 py-4 mb-2">
                <div class="flex-1 h-full items-center">
                    <input class="bg-back rounded px-2 py-1 h-full text-center font-semibold" type="date" name="date" id="date" value={ TranslateTimeToHTML(date) } required>
                </div>
                <div class="h-full items-center">
                    <button class="bg-primary-light rounded h-full px-3 py-1 mr-1 text-center items-center font-medium" onclick="window.location.href='/citas/new'" type="button">Agregar</button>
                    <button class="bg-primary rounded h-full px-3 py-1 text-center items-center font-medium" type="submit">Buscar</button>
                </div>
            </form>

            @ComponentCitaTable(citas)
        </div>
    }
}

func TranslateTimeToHTML(t time.Time) string {
    return t.Format("2006-01-02")
}